/**
 * Access Model
 * -----------------
 * This file defines the Sequelize `Access` model, which represents the `access` table in the database.
 *
 * Contains:
 * - Model attributes (`AccessAttributes`).
 * - Required attributes for creation (`AccessCreationAttributes`).
 * - Model definition with its columns and constraints.
 *
 * This model is used by services and controllers to perform CRUD operations for analyst access.
 */
import { DataTypes, Model, Optional } from "sequelize";
import sequelize from "../config/database";

/**
 * Attributes for `Access`.
 */
export interface AccessAttributes {
    id_access: number;
    role_id: number;
    document: string;
    password: string;
    is_active: boolean;
}

/**
 * Attributes used for creating a new access.
 * `Optional` is used to indicate that `id_access` is not required at the time of creation, as it is automatically generated by the database.
*/
export interface AccessCreationAttributes extends Optional<AccessAttributes, "id_access"> { }

/**
 * Class that represents the `Access` model in Sequelize.
 *
 * Implements the attributes defined in `AccessAttributes` and `AccessCreationAttributes`.
 */
class Access extends Model<AccessAttributes, AccessCreationAttributes> implements AccessAttributes {
    /** Unique access identifier (primary key). */
    public id_access!: number;

    /** Role identifier associated with this access. */
    public role_id!: number;

    /** document for analyst login. */
    public document!: string;

    /** Hashed password for user login. */
    public password!: string;

    /** Whether the access is active or inactive. */
    public is_active!: boolean;
}

/**
 * Initialization of the `Access` model with Sequelize configuration.
 *
 * - `id_access`: Auto-incrementing integer, primk* - `role_id`: Foreign key to the role table.
ey k* - `role_id`: Foreign key to the role table.
ey.
 * - `role_id`: Foreign key to the role table.
 * - `document`: document for analyst login.
 * - `password`: Hashed password for analyst login.
 * - `is_active`: Boolean to determine if the access is active or inactive.
 */
Access.init(
    {
        id_access: {
            type: DataTypes.INTEGER,
            autoIncrement: true,
            primaryKey: true
        },
        role_id: {
            type: DataTypes.INTEGER,
            allowNull: false,
            references: {
                model: "role",
                key: "id_role",
            },
        },
        document: {
            type: DataTypes.STRING(20),
            unique: true,
            allowNull: false,
        },
        password: {
            type: DataTypes.STRING(255),
            allowNull: false,
        },
        is_active: {
            type: DataTypes.BOOLEAN,
            allowNull: false,
            defaultValue: true,
        },
    },
    {
        sequelize,
        modelName: "Access",
        tableName: "access",
        timestamps: true,
        createdAt: "created_at",
        updatedAt: "updated_at",
    }
);

export default Access;
